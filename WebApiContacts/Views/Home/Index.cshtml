@{
    var contactUrl = Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Contacts" });
    var imageUrl = Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Image" });
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>ASP.NET Web API</title>
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/modernizr-2.0.6-development-only.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-1.6.2.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.form.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/knockout-2.0.0.js")" type="text/javascript"></script>
    <meta name="viewport" content="width=device-width" />
    
    <script type="text/javascript">
        var httpStuff = {
            statusCodes :
                {
                    OK: 200,
                    Created: 201,
                    Accepted: 202,
                    NoContent: 204,
                    BadRequest: 400,
                    Unauthorized: 401,
                    Forbidden: 403,
                    NotFound: 404,
                    NotAllowed: 405,
                    ServerError: 500
                }
        }
        function ViewModel() {
            var self = this;
            self.contacts = ko.observableArray()
            self.addContacts = function (contacts) {
                console.log(contacts);
                for (var contactIndex in contacts) {
                    console.log(contactIndex);
                    self.addContact(contacts[contactIndex]);
                }
            };
            this.deleteContact = function (contact) {
                var uri = contact.Uri;
                $.ajax({
                    url: uri,
                    type: "DELETE",
                    success: function () {
                        self.contacts.remove(contact);
                    },
                    error: function (response, status, statusMessage) {
                        alert(response.status + ": " + statusMessage);
                    }
                });

            };
            this.addContact = function (contact) {
                self.contacts.push(contact);
            };
            /* animations */
            this.showContactElement = function (elem, maybe, object) {
                if (elem.nodeType === 1) {
                    $(elem).hide().slideDown('normal', function() {
                        $("form", this).ajaxForm(function(data, message, response, form) {
                            object.HasImage(true);
                        });
                    });
                }
            };
            this.deleteContactElement = function(elem) {
                if (elem.nodeType === 1)
                    $(elem).slideUp(function() {
                        $(elem).remove();
                    });
            };
        }

        $(function () {
            var contactContainer = $("#contacts");
            var contactUrl = contactContainer.attr("data-contact-url");
            var imageUrl = contactContainer.attr("data-contact-image-url");
            var model = new ViewModel();
            ko.applyBindings(model);
            $.getJSON(contactUrl, function (data, message, response) {
                if (response.status == httpStuff.statusCodes.OK) {
                    for (var contactIndex in data) {
                        createKOContact(data[contactIndex]);
                    }
                    model.addContacts(data);
                }
            });
            function createKOContact(contact) {
                contact.Uri = contactUrl + "/" + contact.Id;
                contact.Image = imageUrl + "/" + contact.Id;
                var hasImage = contact.HasImage;
                contact.HasImage = ko.observable(hasImage);
                return contact;
            }
            $("#addContact", this).ajaxForm(function (data, message, response, form) {
                var contact = createKOContact(data);
                model.addContact(contact);
                $('input[type!="submit"]', form).val('');
            });
        });
    </script>
    <script type="text/html" id="contact-template">
        <div class="contact">
            <div class="contact-header header">
                <h3><span data-bind="text: FirstName"></span> <span data-bind="text: LastName"></span></h3>
            </div>
            <div class="contact-info">
                <div class="contact-content">
                    <div class="contact-details">
                        <div class="contact-detail">
                            Phone number: <span data-bind="text: PhoneNumber"></span>
                        </div>
                    </div>
                    <div class="contact-actions">
                        <a href="#" data-bind="click: $root.deleteContact">Delete</a>
                    </div>
                </div>
                <div class="contact-image">
                    <div data-bind="if: HasImage">
                        <img data-bind="attr: {src: Image}"/>
                    </div>
                    <div data-bind="ifnot: HasImage">
                        <form enctype="multipart/form-data" method="POST" data-bind="attr: {action: Image}">
                            <input type="file" name="file"/>
                            <input type="submit" value="Upload image"/>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </script>
</head>
<body>
    <header>
        <div class="content-wrapper">       
            <div class="float-left">
                <p class="site-title"><a href="/">Contact stuff</a></p>
            </div>
        </div>
    </header>
    <div id="body">
        <section class="featured">
            <div class="content-wrapper">
                <hgroup class="title">
                    <h1>Welcome to my awesome contact!</h1>
                </hgroup>
            </div>
        </section>
        <section class="content-wrapper main-content clear-fix">
            <h3>Contacts:</h3>
            <div id="contacts" data-contact-url="@contactUrl" data-contact-image-url="@imageUrl" 
                 data-bind="template: { name: 'contact-template', foreach: contacts, beforeRemove: deleteContactElement, afterAdd: showContactElement }">
            </div>
            <div id="add-contact">
                <div class="header"><h3>Add contact</h3></div>
                <form method="POST" id="addContact" action="@contactUrl">
                    <div class="input-field">
                        @Html.Label("FirstName") @Html.TextBox("FirstName")
                    </div>
                    <div class="input-field">
                        @Html.Label("LastName") @Html.TextBox("LastName")
                    </div>
                    <div class="input-field">
                        @Html.Label("PhoneNumber") @Html.TextBox("PhoneNumber")
                    </div>
                    <input type="submit" value="Add contact"/>
                </form>
            </div>
         </section>
    </div>
</body>
</html>
